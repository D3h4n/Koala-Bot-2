name: Koala Bot 2 CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: 18.10.0

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{runner.os}}-modules-${{hashFiles('package-lock.json')}}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Packages
        run: npm i

      - name: Run ESLint
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{runner.os}}-modules-${{hashFiles('package-lock.json')}}

      - name: Install Packages
        run: npm i

      - name: Run Tests with Coverage Report
        run: npm run coverage

      - name: Report Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: ./reports/jest-junit.xml
          reporter: jest-junit

      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: coverage/lcov.info
          minimum-coverage: 80
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ghcr.io/d3h4n/koala-bot:latest
            ghcr.io/d3h4n/koala-bot:${{ github.sha }}

  "register/update commands":
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{runner.os}}-modules-${{hashFiles('package-lock.json')}}

      - name: Install Packages
        run: npm i

      - name: Register Commands
        run: npm run register
