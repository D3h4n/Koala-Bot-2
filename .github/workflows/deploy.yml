name: Deploy

on:
  workflow_run:
    workflows: [Test]
    branches: [main]
    types: [completed]

env:
  NODE_VERSION: 18.17.1
  AWS_REGION: ca-central-1
  AWS_LIGHTSAIL_SERVICE_NAME: koala-bot-service

jobs:
  register-commands:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: SUPER_SECRET_SECRETS
    runs-on: ubuntu-latest
    env:
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{runner.os}}-modules-${{hashFiles('package-lock.json')}}

      - name: Install Packages
        run: npm i

      - name: Register/Update Commands
        run: npm run register

  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Get Repo Name
        id: repo_name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ghcr.io/${{ github.repository_owner }}/koala-bot

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to ghcr
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ${{ steps.repo_name.outputs.lowercase }}:latest
            ${{ steps.repo_name.outputs.lowercase }}:${{ github.sha }}

  deploy:
    needs: [build, register-commands]
    runs-on: ubuntu-latest
    environment: SUPER_SECRET_SECRETS
    steps:
      - name: Get Repo Name
        id: repo_name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ghcr.io/${{ github.repository_owner }}/koala-bot

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Install AWS Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push and Deploy
        run: |
          jq --arg image '${{ steps.repo_name.outputs.lowercase }}:${{ github.sha }}' \
            --arg bot_token '${{ secrets.DISCORD_BOT_TOKEN }}' \
            --arg api_key '${{ secrets.YOUTUBE_API_KEY }}' \
            --arg client_id '${{ secrets.CLIENT_ID }}' \
            '.containers."koala-bot".image = $image
            | .containers."koala-bot".environment.DISCORD_BOT_TOKEN = $bot_token
            | .containers."koala-bot".environment.YOUTUBE_API_KEY = $api_key
            | .containers."koala-bot".environment.CLIENT_ID = $client_id' \
            container.template.json > container.json
          aws lightsail create-container-service-deployment --service-name ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }} --cli-input-json file://$(pwd)/container.json
